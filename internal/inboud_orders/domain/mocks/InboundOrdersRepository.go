// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	domain "github.com/vinigracindo/mercado-fresco-stranger-strings/internal/inboud_orders/domain"

	time "time"
)

// InboundOrdersRepository is an autogenerated mock type for the InboundOrdersRepository type
type InboundOrdersRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, orderDate, orderNumber, employeeId, productBatchId, warehouseId
func (_m *InboundOrdersRepository) Create(ctx context.Context, orderDate time.Time, orderNumber string, employeeId int64, productBatchId int64, warehouseId int64) (domain.InboundOrders, error) {
	ret := _m.Called(ctx, orderDate, orderNumber, employeeId, productBatchId, warehouseId)

	var r0 domain.InboundOrders
	if rf, ok := ret.Get(0).(func(context.Context, time.Time, string, int64, int64, int64) domain.InboundOrders); ok {
		r0 = rf(ctx, orderDate, orderNumber, employeeId, productBatchId, warehouseId)
	} else {
		r0 = ret.Get(0).(domain.InboundOrders)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, time.Time, string, int64, int64, int64) error); ok {
		r1 = rf(ctx, orderDate, orderNumber, employeeId, productBatchId, warehouseId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewInboundOrdersRepositoryT interface {
	mock.TestingT
	Cleanup(func())
}

// NewInboundOrdersRepository creates a new instance of InboundOrdersRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInboundOrdersRepository(t NewInboundOrdersRepositoryT) *InboundOrdersRepository {
	mock := &InboundOrdersRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
